{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "medical-adf-ws"
		},
		"AzureSqlDatabase_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase'"
		},
		"ls_adls_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls'"
		},
		"ls_git_http_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().baseURL}"
		},
		"AzureSqlDatabase_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "medical-sql-db-server.database.windows.net"
		},
		"AzureSqlDatabase_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "hospital_database"
		},
		"AzureSqlDatabase_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sqladmin"
		},
		"ls_adls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://medicalprojectadls.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/dataToSqlDb')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('pv_file_paths')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_http_csv",
											"type": "DatasetReference",
											"parameters": {
												"ds_p_filename": {
													"value": "@item().file",
													"type": "Expression"
												},
												"ds_p_folder": {
													"value": "@item().folder",
													"type": "Expression"
												},
												"ds_p_relative_path": {
													"value": "@variables('pv_relative_path')",
													"type": "Expression"
												},
												"ds_p_base_url": {
													"value": "@variables('pv_base_url')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlTable",
											"type": "DatasetReference",
											"parameters": {
												"ds_p_schema": {
													"value": "@split(replace(item().folder ,'-','_'),'/')[2]",
													"type": "Expression"
												},
												"ds_p_table": {
													"value": "@split(item().file,'.' )[0]",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"pv_file_paths": {
						"type": "Array",
						"defaultValue": [
							{
								"folder": "/EMR/trendytech-hospital-b/",
								"file": "departments.csv"
							},
							{
								"folder": "/EMR/trendytech-hospital-b/",
								"file": "encounters.csv"
							},
							{
								"folder": "/EMR/trendytech-hospital-b/",
								"file": "patients.csv"
							},
							{
								"folder": "/EMR/trendytech-hospital-b/",
								"file": "providers.csv"
							},
							{
								"folder": "/EMR/trendytech-hospital-b/",
								"file": "transactions.csv"
							}
						]
					},
					"pv_relative_path": {
						"type": "String",
						"defaultValue": "bigdatabysumitm/Trendytech-Azure-Project/refs/heads/main/datasets/"
					},
					"pv_base_url": {
						"type": "String",
						"defaultValue": "https://raw.githubusercontent.com/"
					}
				},
				"folder": {
					"name": "sqldb"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_http_csv')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_git_http')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"baseURL": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_git_http_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_http_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_git_http",
					"type": "LinkedServiceReference",
					"parameters": {
						"baseURL": {
							"value": "@dataset().ds_p_base_url",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"ds_p_filename": {
						"type": "string"
					},
					"ds_p_folder": {
						"type": "string"
					},
					"ds_p_relative_path": {
						"type": "string"
					},
					"ds_p_base_url": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat(dataset().ds_p_relative_path,dataset().ds_p_folder,dataset().ds_p_filename)",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_git_http')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ds_p_schema": {
						"type": "string"
					},
					"ds_p_table": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().ds_p_schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().ds_p_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_generic_delimited_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ds_container": {
						"type": "string"
					},
					"ds_folder": {
						"type": "string"
					},
					"ds_file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().ds_file",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().ds_folder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().ds_container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_generic_adls_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ds_container": {
						"type": "string"
					},
					"ds_folder": {
						"type": "string"
					},
					"ds_file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().ds_file",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().ds_folder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().ds_container",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_sql_to_adls_bronze')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup config file",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_generic_delimited_file",
								"type": "DatasetReference",
								"parameters": {
									"ds_container": "configs",
									"ds_folder": "emr",
									"ds_file": "load_config.csv"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup config file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup config file').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "file exists",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_generic_adls_parquet",
											"type": "DatasetReference",
											"parameters": {
												"ds_container": "bronze",
												"ds_folder": {
													"value": "@item().targetpath",
													"type": "Expression"
												},
												"ds_file": {
													"value": "@split(item().tablename,'.')[1]",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "ParquetReadSettings"
										}
									}
								},
								{
									"name": "If file exists",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "file exists",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('file exists').output.exists,true)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "archive",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ParquetSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "ParquetReadSettings"
														}
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_generic_adls_parquet",
														"type": "DatasetReference",
														"parameters": {
															"ds_container": "bronze",
															"ds_folder": {
																"value": "@item().targetpath",
																"type": "Expression"
															},
															"ds_file": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_generic_adls_parquet",
														"type": "DatasetReference",
														"parameters": {
															"ds_container": "bronze",
															"ds_folder": {
																"value": "@concat(item().targetpath,'/archive/',formatDateTime(utcNow(),'yyyy'),'/',formatDateTime(utcNow(),'%M' ),'/',formatDateTime(utcNow(),'%d' ))",
																"type": "Expression"
															},
															"ds_file": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								},
								{
									"name": "full load or incremental load",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "If file exists",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().loadtype,'Full')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "fetch last loaded time",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "@concat('select coalesce(cast(max(load_date) as date),''','1900-01-01',''') as last_fetched_date from audit.load_logs where',' data_source = ''',item().datasource,''' and tablename = ''' ,item().tablename,'''')",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "AzureSqlTable",
														"type": "DatasetReference",
														"parameters": {
															"ds_p_schema": "aa",
															"ds_p_table": "aa"
														}
													}
												}
											},
											{
												"name": "incremental load copy",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "fetch last loaded time",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "@concat('SELECT *,''',item().datasource,''' as datasource from ',item().tablename,' where ',\nitem().watermark,' >= ''',activity('fetch last loaded time').output.firstRow.last_fetched_date,''''\n)",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "AzureSqlTable",
														"type": "DatasetReference",
														"parameters": {
															"ds_p_schema": {
																"value": "@split(item().tablename,'.')[0]",
																"type": "Expression"
															},
															"ds_p_table": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_generic_adls_parquet",
														"type": "DatasetReference",
														"parameters": {
															"ds_container": "bronze",
															"ds_folder": {
																"value": "@item().targetpath",
																"type": "Expression"
															},
															"ds_file": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "insert log inc load",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "incremental load copy",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "@concat('insert into audit.load_logs(data_source,table_name,number_of_rows_copied,water_mark_column_name,load_date) values (''',item().datasource,''',''',item().tablename,''',''',activity('incremental load copy').output.rowscopied,''',''',item().watermark,''',''',utcNow(),''')')",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "AzureSqlTable",
														"type": "DatasetReference",
														"parameters": {
															"ds_p_schema": "aa",
															"ds_p_table": "aa"
														}
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "full_load copy",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "@concat('SELECT *,''',item().datasource,''' as datasource from ',item().tablename)",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "ParquetSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "ParquetWriteSettings"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "AzureSqlTable",
														"type": "DatasetReference",
														"parameters": {
															"ds_p_schema": {
																"value": "@split(item().tablename,'.' )[0]",
																"type": "Expression"
															},
															"ds_p_table": {
																"value": "@split(item().tablename,'.' )[1]",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_generic_adls_parquet",
														"type": "DatasetReference",
														"parameters": {
															"ds_container": "bronze",
															"ds_folder": {
																"value": "@item().targetpath",
																"type": "Expression"
															},
															"ds_file": {
																"value": "@split(item().tablename,'.')[1]",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Insert logs full load",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "full_load copy",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "@concat(\n'insert into audit.load_logs(data_source,table_name,number_of_rows_copied,water_mark_column_name,load_date)values(\n''',item().datasource,''',''',item().tablename,''',''',activity('full_load copy').output.rowscopied,''',''',item().watermark,''',''',utcNow(),''')')",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "AzureSqlTable",
														"type": "DatasetReference",
														"parameters": {
															"ds_p_schema": "aa",
															"ds_p_table": "aa"
														}
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "bonze"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_file')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_adls_parquet')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable')]"
			]
		}
	]
}